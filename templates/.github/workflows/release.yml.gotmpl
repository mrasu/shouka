name: Release
on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: [completed]
jobs:
  on-failure:
    runs-on: ubuntu-latest
    if: ${{"{{"}} github.event.workflow_run.conclusion == 'failure' {{"}}"}}
    steps:
      - name: Stop release as tests failed
        run: exit 1
  on-success:
    runs-on: ubuntu-latest
    if: ${{"{{"}} github.event.workflow_run.conclusion == 'success' {{"}}"}}
    steps:
      - run: echo "Start release"
  build:
    runs-on: ubuntu-latest
    needs: on-success
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/login_aws
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsRoleArn }}
          role_arn: "{{.AwsRoleArn}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add ARN for IAM role to connect GitHub Actions by OpenId Connect
          # e.g. role_arn: "arn:aws:iam::xxxxxx:role/GitHubActionRole"
          role_arn: "{{.AwsRoleArn}}"
        {{- end }}
      - uses: ./.github/actions/login_ecr
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsEcrRegistry }}
          server: "{{.AwsEcrRegistry}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Domain for ECR's Registry putting your image
          # e.g. server: "xxxx.dkr.ecr.us-east-1.amazonaws.com"
          server:
        {{- end }}
      - name: Build, tag, and push image to Amazon ECR
        env:
        {{- if .AwsEcrRegistry }}
          ECR_REGISTRY: "{{.AwsEcrRegistry}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Domain for ECR's Registry putting your image
          # e.g. ECR_REGISTRY: "xxxx.dkr.ecr.us-east-1.amazonaws.com"
          ECR_REGISTRY:
        {{- end }}
        {{- if .AwsEcrRepository }}
          ECR_REPOSITORY: "{{.AwsEcrRepository}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Repository for ECR putting your image
          # e.g. ECR_REPOSITORY: "sk-repository"
          ECR_REPOSITORY:
        {{- end }}
          IMAGE_TAG: ${{"{{"}} github.sha {{"}}"}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
  migrate:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/login_aws
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsRoleArn }}
          role_arn: "{{.AwsRoleArn}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add ARN for IAM role to connect GitHub Actions by OpenId Connect
          # e.g. role_arn: "arn:aws:iam::xxxxxx:role/GitHubActionRole"
          role_arn: "{{.AwsRoleArn}}"
        {{- end }}
      - uses: ./.github/actions/login_ecr
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsEcrRegistry }}
          server: "{{.AwsEcrRegistry}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Domain for ECR's Registry putting your image
          # e.g. server: "xxxx.dkr.ecr.us-east-1.amazonaws.com"
          server:
        {{- end }}
      - uses: ./.github/actions/add_tag_to_ecr_image
        with:
        {{- if .AwsEcrRepository }}
          ecr_repository: "{{.AwsEcrRepository}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Repository for ECR putting your image
          # e.g. ecr_repository: "sk-repository"
          ecr_repository:
        {{- end }}
          existing_tag: ${{"{{"}} github.sha {{"}}"}}
          new_tag: "{{.AwsEcrMigrationTag}}"
      - name: Run migration
        env:
          SERVICE_NAME: "{{.AwsEcsServiceName}}"
          CLUSTER_NAME: "{{.AwsEcsClusterName}}"
          # **SK-CHANGE-REQUIRED**
          # Add Name for migration task
          # e.g. TASK_DEFINITION: "{{.AwsEcsMigrationTaskName}}:1"
          TASK_DEFINITION:
        run: |
          aws ecs describe-services --services $SERVICE_NAME --cluster $CLUSTER_NAME > __tmp_services.json

          echo '{"cluster": "'"${CLUSTER_NAME}"'", "count": 1, "launchType": "FARGATE", "networkConfiguration": {}, "taskDefinition": "'"${TASK_DEFINITION}"'"}' | jq -M --argfile gs __tmp_services.json '.networkConfiguration *= $gs.services[0].networkConfiguration' > __tmp_task_input.json

          aws ecs run-task --cli-input-json file://__tmp_task_input.json > __tmp_task.json

          task_arn=$(jq -r .tasks[0].taskArn ./__tmp_task.json)
          echo "Running task....      ${task_arn}"

          aws ecs wait tasks-stopped --cluster ${CLUSTER_NAME} --tasks $task_arn

          exitCode=$(aws ecs describe-tasks --cluster ${CLUSTER_NAME} --tasks $task_arn | jq .tasks[0].containers[0].exitCode)
          echo "Task stopped with exitCode: ${exitCode}"

          rm __tmp_*
          exit $exitCode
  deploy:
    runs-on: ubuntu-latest
    needs: migrate
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/login_aws
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsRoleArn }}
          role_arn: "{{.AwsRoleArn}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add ARN for IAM role to connect GitHub Actions by OpenId Connect
          # e.g. role_arn: "arn:aws:iam::xxxxxx:role/GitHubActionRole"
          role_arn: "{{.AwsRoleArn}}"
        {{- end }}
      - uses: ./.github/actions/login_ecr
        with:
          region: "{{.AwsRegion}}"
        {{- if .AwsEcrRegistry }}
          server: "{{.AwsEcrRegistry}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Domain for ECR's Registry putting your image
          # e.g. server: "xxxx.dkr.ecr.us-east-1.amazonaws.com"
          server:
        {{- end }}
      - uses: ./.github/actions/add_tag_to_ecr_image
        with:
        {{- if .AwsEcrRepository }}
          ecr_repository: "{{.AwsEcrRepository}}"
        {{- else }}
          # **SK-CHANGE-REQUIRED**
          # Add Repository for ECR putting your image
          # e.g. ecr_repository: "sk-repository"
          ecr_repository:
        {{- end }}
          existing_tag: ${{"{{"}} github.sha {{"}}"}}
          new_tag: "{{.AwsEcrTag}}"
      - env:
          APPLICATION_NAME: "{{.AwsApplicationName}}"
          DEPLOYMENT_GROUP_NAME: "{{.AwsDeploymentGroupName}}"
        run: |
          aws deploy create-deployment --application-name $APPLICATION_NAME \
                                        --deployment-group-name $DEPLOYMENT_GROUP_NAME \
                                        --revision revisionType=AppSpecContent,appSpecContent={content="$(cat appspec.yml)"}

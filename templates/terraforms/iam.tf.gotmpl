{{ if not .Iam.EcsTaskExecutionArn -}}
resource "aws_iam_role" "ecs_task_execution" {
  assume_role_policy = jsonencode(
    {
      Statement = [
        {
          Action = "sts:AssumeRole"
          Effect = "Allow"
          Principal = {
            Service = "ecs-tasks.amazonaws.com"
          }
          Sid = ""
        },
      ]
      Version = "2008-10-17"
    }
  )
  managed_policy_arns = [
    "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
  ]
  max_session_duration = 3600
  name                 = "{{.SkPrefix}}-EcsTaskExecutionRole"
  path                 = "/"

  inline_policy {}

  tags = {}
}

{{ end -}}
{{ if not .Iam.CodedeployArn -}}
resource "aws_iam_role" "codedeploy" {
  assume_role_policy = jsonencode(
    {
      Statement = [
        {
          Action = "sts:AssumeRole"
          Effect = "Allow"
          Principal = {
            Service = "codedeploy.amazonaws.com"
          }
          Sid = ""
        },
      ]
      Version = "2012-10-17"
    }
  )
  managed_policy_arns = [
    "arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS",
  ]
  max_session_duration = 3600
  name                 = "{{.SkPrefix}}-CodeDeployRole"
  path                 = "/"

  inline_policy {}

  tags = {}
}

{{ end -}}

{{ if not .Iam.GithubActionsOpenidProviderArn -}}
resource "aws_iam_openid_connect_provider" "github_actions" {
  url = "https://token.actions.githubusercontent.com"

  client_id_list = var.iam_github_actions_provider_client_ids

  thumbprint_list = [
    "a031c46782e6e6c662c2c87c76da9aa62ccabd8e",
  ]

  tags = {}
}

{{ end -}}

{{ if not .Iam.GithubActionsArn -}}
resource "aws_iam_role" "github_actions" {
  assume_role_policy = jsonencode(
    {
      Statement = [
        {
          Action = "sts:AssumeRoleWithWebIdentity"
          Condition = {
            StringLike = {
              "token.actions.githubusercontent.com:sub" = var.iam_github_actions_role_vstoken_string_like
            }
          }
          Effect = "Allow"
          Principal = {
          {{- if .Iam.GithubActionsOpenidProviderArn }}
            Federated = var.iam_openid_provider_github_actions_arn
          {{- else }}
            Federated = "${aws_iam_openid_connect_provider.github_actions.arn}"
          {{- end }}
          }
        },
      ]
      Version = "2008-10-17"
    }
  )
  managed_policy_arns = [
    "arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess",
    "arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS",
    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
    "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
  ]
  max_session_duration = 3600
  name                 = "GitHubActionRole"
  path                 = "/"
  tags                 = {}

  inline_policy {}
}

{{ end -}}
# Made by Shouka
